{"version":3,"sources":["utils/getData.js","utils/myFile.js","store/employees.context.js","components/TableHeadersEmployeesKeys/TableHeaders.js","utils/sortColumns.js","store/modal.context.js","components/ButtonDeleteEmployee/styles/ButtonDeleteEmployeeStyled.js","components/ButtonDeleteEmployee/ButtonDeleteEmployee.js","components/TableRowsEmployees/TableRowsEmployees.js","components/TableEmployees/TableEmployees.js","hooks/useReactPaginate.js","utils/itemsPerPage.js","utils/handlePageClick.js","commonStyles/CommonButtonStyled.js","components/ButtonSubmit/styles/ButtonSubmitStyled.js","components/ButtonSubmit/ButtonSubmit.js","components/ContactForm/styles/ContactFormStyled.js","components/MyOwnField/styles/MyOwnField.styled.js","components/MyOwnField/MyOwnField.js","components/FormFields/DefaultInputsForm/DefaultInputsForm.js","components/ContactForm/ContactForm.js","components/FormBox/styles/FormBoxStyled.js","components/FormBox/FormBox.js","components/MainHeading/styles/MainHeadingStyled.js","components/MainHeading/MainHeading.js","components/ModalConfirmationToDeleteEmployee/ModalConfirmationToDeleteEmployee.js","utils/deleteSelectedEmployee.js","components/ButtonOpenTable/styles/ButtonOpenTableStyled.js","components/ButtonOpenTable/ButtonOpenTable.js","App.js","reportWebVitals.js","index.js"],"names":["getData","a","axios","method","url","responseType","then","data","EmployeesContext","createContext","EmployeesContextProvider","props","useState","localStorage","getItem","JSON","parse","setData","itemToDelete","setItemToDelete","useEffect","fetchData","dat","setItem","stringify","Provider","value","children","TableHeadersEmployeesKeys","keys","order","setOrder","useContext","map","keyHeader","type","onClick","e","key","target","dataset","buttonType","slice","sort","b","sortColumns","v4","ModalContext","ModalContextProvider","isOpenModal","setIsOpenModal","ButtonDeleteEmployeeStyled","styled","button","ButtonDeleteEmployee","item","handleShow","TableRowsEmployees","employees","Object","values","currentValue","String","TableEmployee","setKeys","setEmployees","pageCount","setPageCount","itemOffset","setItemOffset","itemsPerPage","setCurrentItems","endOffset","Math","ceil","length","useReactPaginate","Table","responsive","nextLabel","onPageChange","event","selected","handlePageClick","pageRangeDisplayed","previousLabel","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","breakLabel","breakClassName","breakLinkClassName","containerClassName","activeClassName","renderOnZeroPageCount","CommonButtonStyled","ButtonSubmitStyled","ButtonSubmit","ContactFormStyled","form","MyOwnFieldStyled","div","Label","label","MyOwnField","useField","field","meta","htmlFor","id","name","as","touched","error","className","DefaultInputsForm","placeholder","pattern","required","min","age","company","isActive","ContactForm","initialValues","gender","onSubmit","previous","newIndex","index","onReset","handleReset","handleSubmit","FormBoxStyled","isLightThemeColor","defaultProps","FormBox","MainHeadingStyled","h1","MainHeading","ModalConfirmationToDeleteEmployee","isModalOpen","setIsModalOpen","Modal","show","onHide","Header","closeButton","Title","Body","Footer","Button","variant","filter","currentItem","deleteSelectedEmployee","ButtonOpenTableStyled","ButtonOpenTable","isOpenTable","setIsOpenTable","App","setShow","TableEmployees","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qQAGMA,EAAO,uCAAG,sBAAAC,EAAA,+EACPC,IAAM,CACXC,OAAQ,MACRC,ICNkB,iBDOlBC,aAAc,SACbC,MAAK,YACN,OADoB,EAAXC,SALG,2CAAH,qDAUEP,I,OEVFQ,EAAmBC,0BAEnBC,EAA2B,SAACC,GACvC,MAAwBC,mBAASC,aAAaC,QAAQ,aAAcC,KAAKC,MAAMH,aAAaC,QAAQ,cAAgB,MAApH,mBAAOP,EAAP,KAAaU,EAAb,KACA,EAAuCL,mBAAS,MAAhD,mBAAOM,EAAP,KAAoBC,EAApB,KAmBA,OAjBAC,qBAAU,WACR,IAAIP,aAAaC,QAAQ,kBAAmB,CAAC,IAC9BO,EAD6B,uCAC5C,4BAAApB,EAAA,sEACoBD,IADpB,OACQsB,EADR,OAEEL,EAAQK,GACRT,aAAaU,QAAQ,kBAAiB,GAHxC,2CAD4C,qDAM5CF,OAEC,IAEHD,qBAAU,WACLb,GACDM,aAAaU,QAAQ,YAAYR,KAAKS,UAAUjB,MAEjD,CAACA,IAGF,cAACC,EAAiBiB,SAAlB,CAA2BC,MAAO,CAACnB,EAAMU,EAAQC,EAAaC,GAA9D,SACGR,EAAMgB,Y,yBCvBAC,EAA4B,SAAC,GAA2B,IAA1BC,EAAyB,EAAzBA,KAAKC,EAAoB,EAApBA,MAAMC,EAAc,EAAdA,SACpD,EAAuBC,qBAAWxB,GAAlC,mBAAOD,EAAP,KAAYU,EAAZ,KAEA,OACMY,EACMA,EAAKI,KAAI,SAACC,GAAD,OACP,6BACE,wBACEC,KAAK,SACL,mBAAkBD,EAClBE,QAAS,SAACC,GAAD,OCfF,SAACA,EAAEP,EAAMC,EAASxB,EAAKU,GAC9C,IAAMqB,EAAMD,EAAEE,OAAOC,QAAQC,WAY7BxB,EAVoBV,EAAKmC,MAAM,GAAGC,MAAK,SAAU1C,EAAG2C,GAClD,MAAc,QAAVd,GACFC,EAAS,OACF9B,EAAEqC,GAAOM,EAAEN,GAAO,EAAIrC,EAAEqC,GAAOM,EAAEN,IAAQ,EAAI,GACjC,QAAVR,GACTC,EAAS,OACF9B,EAAEqC,GAAOM,EAAEN,GAAO,EAAIrC,EAAEqC,GAAOM,EAAEN,IAAQ,EAAI,QAF/C,MDQuBO,CAAYR,EAAEP,EAAMC,EAASxB,EAAKU,IAHpD,mBAGkEiB,MAJ3DY,kBAOX,MEhBDC,EAAetC,0BAEfuC,EAAuB,SAACrC,GACnC,MAAsCC,oBAAS,GAA/C,mBAAOqC,EAAP,KAAoBC,EAApB,KAEA,OACE,cAACH,EAAatB,SAAd,CAAuBC,MAAO,CAACuB,EAAaC,GAA5C,SACGvC,EAAMgB,Y,cCRAwB,EAA4BC,IAAOC,OAAT,+GCI1BC,EAAuB,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,KAAKC,EAAgB,EAAhBA,WACvC,EAAoDxB,qBAAWxB,GAA/D,mBAAOD,EAAP,KAAYU,EAAZ,KAAiCE,GAAjC,WACA,EAAqCa,qBAAWe,GAAhD,mBAAOE,EAAP,KAAmBC,EAAnB,KAEA,OACI,cAACC,EAAD,CACDf,QAAS,WACPoB,EAAWjD,EAAKU,EAAQsC,GACxBpC,EAAgBoC,GACjBL,GAAgBD,IAJhB,qBCPKQ,EAAqB,SAAC9C,GACjC,OACEA,EAAM+C,UACF/C,EAAM+C,UAAUzB,KAAI,SAACsB,GAAD,OACpB,+BAEII,OAAOC,OAAOL,GAAMtB,KAAI,SAAA4B,GAAY,OAAI,6BAAgBC,OAAOD,IAAdf,kBAEnD,6BACE,cAAC,EAAD,CAAsBS,KAAMA,EAAMC,WAAY7C,EAAM6C,iBAL/CV,kBAST,MC8COiB,EApDO,SAACpD,GACrB,MAAwBqB,qBAAWxB,GAAnC,mBAAOD,EAAP,KAAaU,EAAb,KACA,EAAwBL,qBAAxB,mBAAOiB,EAAP,KAAamC,EAAb,KACA,EAA0BpD,mBAAS,OAAnC,mBAAOkB,EAAP,KAAcC,EAAd,KACA,EAAkCnB,qBAAlC,mBAAO8C,EAAP,KAAkBO,EAAlB,KACA,EAAkCrD,mBAAS,GAA3C,mBAAOsD,EAAP,KAAkBC,EAAlB,KACA,EAAoCvD,mBAAS,GAA7C,mBAAOwD,EAAP,KAAmBC,EAAnB,KAWA,OCzB8B,SAACD,EAAYE,EAAc/D,EAAKgE,EAAgBJ,GAE9E/C,qBAAU,WACP,IAAMoD,EAAYJ,EAAaE,EAC3B/D,IACFgE,EAAgBhE,EAAKmC,MAAM0B,EAAYI,IACvCL,EAAaM,KAAKC,KAAKnE,EAAKoE,OAASL,OAExC,CAACF,EAAYE,EAAc/D,IDQ7BqE,CAAiBR,EElBS,IFkBe7D,EAAK0D,EAAaE,GAG3D/C,qBAAU,WACJb,GACFyD,EAAQL,OAAO9B,KAAKtB,EAAK,OAE1B,CAACA,IAGF,qCACE,eAACsE,EAAA,EAAD,CAAOC,WAAW,KAAlB,UACE,gCACE,6BACE,cAAC,EAAD,CAA2BjD,KAAMA,EAAMC,MAAOA,EAAOC,SAAUA,EAAUxB,KAAMA,EAAMU,QAASA,QAGlG,gCACC,cAAC,EAAD,CAAoByC,UAAWA,EAAWF,WAAY7C,EAAM6C,kBAG/D,cAAC,IAAD,CACEuB,UAAU,SACVC,aAAc,SAACC,GAAD,OGtCS,SAACA,EAAM1E,EAAK8D,GAGvCA,EDNwB,ICILY,EAAMC,SAA2B3E,EAAKoE,QHqC9BQ,CAAgBF,EAAM1E,EAAK8D,IAClDe,mBAAoB,EACpBlB,UAAWA,EACXmB,cAAc,aACdC,cAAc,YACdC,kBAAkB,YAClBC,kBAAkB,YAClBC,sBAAsB,YACtBC,cAAc,YACdC,kBAAkB,YAClBC,WAAW,MACXC,eAAe,YACfC,mBAAmB,YACnBC,mBAAmB,aACnBC,gBAAgB,SAChBC,sBAAuB,W,uBItDlBC,EAAqB9C,IAAOC,OAAV,8jBCClB8C,EAAqB/C,YAAO8C,EAAP9C,CAAH,4BCDlBgD,EAAe,WAC1B,OAAO,cAACD,EAAD,CAAoBhE,KAAK,SAAzB,qBCDIkE,EAAoBjD,IAAOkD,KAAV,8C,OCAjBC,EAAmBnD,IAAOoD,IAAV,0mCAqChBC,EAAQrD,IAAOsD,MAAV,gI,YCpCLC,EAAa,SAAC,GAAyB,IAAvBD,EAAsB,EAAtBA,MAAU/F,EAAY,iBACjD,EAAsBiG,YAASjG,GAA/B,mBAAOkG,EAAP,KAAcC,EAAd,KAEA,OACE,eAACP,EAAD,WACE,cAACE,EAAD,CACEM,QAASpG,EAAMqG,IAAMrG,EAAMsG,KAD7B,SAEGP,IAEH,cAAC,IAAD,yBACEQ,GAAIvG,EAAMuG,IACNL,GACAlG,IAELmG,EAAKK,SAAWL,EAAKM,MACpB,qBAAKC,UAAU,QAAf,SAAwBP,EAAKM,QAC3B,SClBGE,EAAoB,SAAC3G,GAAD,OAC/B,qCACE,cAAC,EAAD,CACEqG,GAAG,OACHN,MAAM,OACNO,KAAK,OACL9E,KAAK,OACL+E,GAAG,QACHxF,MAAOf,EAAMsG,KACbM,YAAY,+BACZC,QAAQ,sOACRC,UAAQ,IAET,cAAC,EAAD,CACCT,GAAG,MACHN,MAAM,MACNO,KAAK,MACLS,IAAI,IACJvF,KAAK,SACL+E,GAAG,QACHxF,MAAOf,EAAMgH,IACbJ,YAAY,8BACZE,UAAQ,IAET,eAAC,EAAD,CACET,GAAG,SACJE,GAAG,SACHD,KAAK,SACLP,MAAM,SACNe,UAAQ,EALT,UAOC,wBAAQ/F,MAAM,GAAd,6BACA,wBAAQA,MAAM,OAAd,kBAGI,wBAAQA,MAAM,SAAd,uBAIJ,cAAC,EAAD,CACAsF,GAAG,UACHN,MAAM,UACNO,KAAK,UACL9E,KAAK,OACL+E,GAAG,QACHxF,MAAOf,EAAMiH,QACbL,YAAY,kCACZE,UAAQ,IAGV,eAAC,EAAD,CACET,GAAG,WACHE,GAAG,SACHD,KAAK,WACLP,MAAM,YACNhF,MAAOf,EAAMkH,SACbJ,UAAQ,EANV,UAOE,wBAAQ/F,MAAM,GAAd,6BACA,wBAAQA,OAAO,EAAf,mBAGE,wBAASA,OAAO,EAAhB,yBCvDMoG,EAAc,WAC1B,MAAuB9F,qBAAWxB,GAAlC,mBAAYS,GAAZ,WAEA,OACE,cAAC,IAAD,CACA8G,cAAe,CACbd,KAAK,GACLU,IAAK,KACLK,OAAQ,GACRJ,QAAS,GACTC,SAAU,MAEVI,SAAU,SAACrE,GACT3C,GAAQ,SAACiH,GACP,IAAMC,EAAYD,EAAS,GAAGE,MAAO,EACrC,MAAM,CAAN,aACGA,MAAOD,GAAYvE,IADtB,mBAEKsE,QAbX,SAiBG,SAACvH,GAAD,OACC,eAAC0F,EAAD,CACEgC,QAAS1H,EAAM2H,YACfL,SAAUtH,EAAM4H,aAFlB,UAGE,cAAC,EAAD,CAAmB3E,OAAQjD,EAAMiD,SACjC,cAAC,EAAD,WC/BG4E,EAAgBpF,IAAOoD,IAAV,kPAKV,SAAC7F,GAAD,OAAYA,EAAM8H,kBAAoB,OAAS,aAK/DD,EAAcE,aAAe,CAC3BD,kBAAmB,QCXd,I,KAAME,GAAU,SAAChI,GAEtB,OACE,cAAC6H,EAAD,UACG7H,EAAMgB,YCJAiH,GAAoBxF,IAAOyF,GAAV,+FCAjBC,GAAc,WACzB,OAAO,cAACF,GAAD,gC,kBCGIG,GAAoC,SAACpI,GAChD,MAAsCqB,qBAAWxB,GAAjD,mBAAOD,EAAP,KAAaU,EAAb,KAAsBC,EAAtB,KACA,EAAsCc,qBAAWe,GAAjD,mBAAOiG,EAAP,KAAoBC,EAApB,KAEA,OACE,eAACC,GAAA,EAAD,CAAOC,KAAMxI,EAAMsC,YAAamG,OAAQH,EAAxC,UACE,cAACC,GAAA,EAAMG,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACJ,GAAA,EAAMK,MAAP,0CAEF,cAACL,GAAA,EAAMM,KAAP,mEACA,eAACN,GAAA,EAAMO,OAAP,WACE,cAACC,GAAA,EAAD,CAAQC,QAAQ,UAAUvH,QAAS,WAAQ6G,GAAgBD,GCjB7B,SAACzI,EAAKU,EAAQsC,GAKhDtC,EAJ2BV,EAAKqJ,QAAO,SAACC,GACpC,OAAOA,EAAYzB,QAAU7E,EAAK6E,UDeuC0B,CAAuBvJ,EAAMU,EAASC,IAA/G,iBAGA,cAACwI,GAAA,EAAD,CAAQC,QAAQ,YAAYvH,QAAS,kBAAM6G,GAAgBD,IAA3D,wBEjBKe,GAAwB3G,YAAO8C,EAAP9C,CAAH,6ECDrB4G,GAAkB,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,eAE3C,OACI,cAACH,GAAD,CAAuB3H,QAAS,kBAAM8H,GAAgBD,IAAtD,SACKA,EAAc,QAAU,UCsBtBE,OAnBf,WACE,MAAsCvJ,oBAAS,GAA/C,mBAAOqJ,EAAP,KAAoBC,EAApB,KACA,EAAsClI,qBAAWe,GAAjD,mBAAOE,EAAP,KACA,GADA,KACwBrC,oBAAS,IAAjC,mBAAOuI,EAAP,KAAaiB,EAAb,KACM5G,EAAa,kBAAM4G,GAAQ,IAEjC,OACE,sBAAK/C,UAAU,MAAf,UACE,cAAC,GAAD,IACA,cAAC,GAAD,UACE,cAAC,EAAD,MAEF,cAAC,GAAD,CAAiB4C,YAAaA,EAAaC,eAAgBA,IAC1DjH,EAAc,cAAC,GAAD,CAAmCA,YAAaA,EAAakG,KAAMA,EAAM3F,WAAYA,IAAiB,KACpHyG,EAAc,cAACI,EAAD,CAAgB7G,WAAYA,IAAiB,SCXnD8G,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlK,MAAK,YAAkD,IAA/CmK,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,GAAD,UAINC,SAASC,eAAe,cAM1BZ,O","file":"static/js/main.ee0db476.chunk.js","sourcesContent":["import { myFile } from \"./myFile\";\nimport axios from \"axios\";\n\nconst getData = async () => {\n  return axios({\n    method: \"get\",\n    url: myFile,\n    responseType: \"json\",\n  }).then(({ data }) => {\n    return data;\n  });\n};\n\nexport default getData;\n","export const myFile = \"employees.json\";\n","import { useState, createContext, useEffect } from \"react\";\nimport getData from \"../utils/getData\";\n\nexport const EmployeesContext = createContext();\n\nexport const EmployeesContextProvider = (props) => {\n  const [data, setData] = useState(localStorage.getItem('employees')? JSON.parse(localStorage.getItem('employees')) : null );\n  const [itemToDelete,setItemToDelete] = useState(null)\n \n  useEffect(() => {\n    if(!localStorage.getItem('dataWasFetched')) {\n    async function fetchData() {\n      const dat = await getData();\n      setData(dat);\n      localStorage.setItem('dataWasFetched',true)\n    }\n    fetchData();\n  }\n  }, []);\n\n  useEffect(() => {\n    if(data){\n      localStorage.setItem('employees',JSON.stringify(data))\n    }\n  }, [data]);\n\n  return (\n    <EmployeesContext.Provider value={[data, setData,itemToDelete,setItemToDelete]}>\n      {props.children}\n    </EmployeesContext.Provider>\n  );\n};\n","import { v4 } from \"uuid\";\nimport { sortColumns } from \"../../utils/sortColumns\";\nimport { EmployeesContext } from \"../../store/employees.context\";\nimport { useContext } from \"react\";\n\nexport const TableHeadersEmployeesKeys = ({keys,order,setOrder}) => {\n  const [data,setData] = useContext(EmployeesContext)\n  \n  return (\n        keys\n            ? keys.map((keyHeader) => (\n                <th key={v4()}>\n                  <button\n                    type=\"button\"\n                    data-button-type={keyHeader}\n                    onClick={(e) => sortColumns(e,order,setOrder,data,setData)}>{`${keyHeader}`}</button>\n                </th>\n              ))\n            : null\n    );\n        }\n\n\n\n","export const sortColumns = (e,order,setOrder,data,setData) => {\n    const key = e.target.dataset.buttonType;\n    \n    const sortedArray = data.slice(0).sort(function (a, b) {\n      if (order === \"asc\") {\n        setOrder(\"des\");\n        return a[key] > b[key] ? 1 : a[key] < b[key] ? -1 : 0;\n      } else if (order === \"des\") {\n        setOrder(\"asc\");\n        return a[key] < b[key] ? 1 : a[key] > b[key] ? -1 : 0;\n      }\n    });\n\n    setData(sortedArray);\n  };","import { useState, createContext } from \"react\";\n\nexport const ModalContext = createContext();\n\nexport const ModalContextProvider = (props) => {\n  const [isOpenModal, setIsOpenModal] = useState(false)\n\n  return (\n    <ModalContext.Provider value={[isOpenModal, setIsOpenModal]}>\n      {props.children}\n    </ModalContext.Provider>\n  );\n};\n","import styled from \"styled-components\";\nexport const ButtonDeleteEmployeeStyled= styled.button`\n    background: red;\n    color: #fff;\n    border: none;\n    padding: 5px 10px;\n`;","import { EmployeesContext } from \"../../store/employees.context\";\nimport { useContext } from \"react\";\nimport { ModalContext } from \"../../store/modal.context\";\nimport { ButtonDeleteEmployeeStyled } from \"./styles/ButtonDeleteEmployeeStyled\";\n\nexport const ButtonDeleteEmployee = ({item,handleShow}) => {\n    const [data,setData,itemToDelete,setItemToDelete] = useContext(EmployeesContext)\n    const [isOpenModal,setIsOpenModal] = useContext(ModalContext)\n\n    return (\n        <ButtonDeleteEmployeeStyled \n       onClick={()=>{\n         handleShow(data,setData,item); \n         setItemToDelete(item);\n        setIsOpenModal(!isOpenModal)}} >\n        DELETE\n      </ButtonDeleteEmployeeStyled>\n    )\n}","import { v4 } from \"uuid\";\nimport { ButtonDeleteEmployee } from \"../ButtonDeleteEmployee/ButtonDeleteEmployee\";\n\nexport const TableRowsEmployees = (props) => {\n  return (\n    props.employees\n      ? props.employees.map((item) => (\n        <tr key={v4()}>\n          {\n            Object.values(item).map(currentValue => <td key={v4()}>{String(currentValue)}</td>)\n          }\n          <td>\n            <ButtonDeleteEmployee item={item} handleShow={props.handleShow} />\n          </td>\n        </tr>\n      ))\n      : null\n\n  )\n}","import { useContext, useEffect, useState } from \"react\";\nimport Table from \"react-bootstrap/Table\";\nimport { EmployeesContext } from \"../../store/employees.context\";\nimport ReactPaginate from \"react-paginate\";\nimport { itemsPerPage } from \"../../utils/itemsPerPage\";\nimport { handlePageClick } from \"../../utils/handlePageClick\";\nimport { useReactPaginate } from \"../../hooks/useReactPaginate\";\nimport { TableHeadersEmployeesKeys } from \"../TableHeadersEmployeesKeys/TableHeaders\";\nimport { TableRowsEmployees } from \"../TableRowsEmployees/TableRowsEmployees\";\n\nconst TableEmployee = (props) => {\n  const [data, setData] = useContext(EmployeesContext);\n  const [keys, setKeys] = useState();\n  const [order, setOrder] = useState(\"asc\");\n  const [employees, setEmployees] = useState();\n  const [pageCount, setPageCount] = useState(0);\n  const [itemOffset, setItemOffset] = useState(0);\n  \n  useReactPaginate(itemOffset,itemsPerPage,data,setEmployees,setPageCount)\n\n\n  useEffect(() => {\n    if (data) {\n      setKeys(Object.keys(data[0]));\n    }\n  }, [data]);\n\n  return (\n    <>\n      <Table responsive=\"xl\">\n        <thead>\n          <tr>\n            <TableHeadersEmployeesKeys keys={keys} order={order} setOrder={setOrder} data={data} setData={setData}/>\n          </tr>\n        </thead>\n        <tbody>\n         <TableRowsEmployees employees={employees} handleShow={props.handleShow}/>\n        </tbody>\n      </Table>\n      <ReactPaginate\n        nextLabel=\"next >\"\n        onPageChange={(event)=>handlePageClick(event,data,setItemOffset)}\n        pageRangeDisplayed={5}\n        pageCount={pageCount}\n        previousLabel=\"< previous\"\n        pageClassName=\"page-item\"\n        pageLinkClassName=\"page-link\"\n        previousClassName=\"page-item\"\n        previousLinkClassName=\"page-link\"\n        nextClassName=\"page-item\"\n        nextLinkClassName=\"page-link\"\n        breakLabel=\"...\"\n        breakClassName=\"page-item\"\n        breakLinkClassName=\"page-link\"\n        containerClassName=\"pagination\"\n        activeClassName=\"active\"\n        renderOnZeroPageCount={null}\n      />\n    </>\n  );\n};\n\nexport default TableEmployee;","import { useState, useEffect } from 'react';\n\nexport const useReactPaginate = (itemOffset, itemsPerPage, data,setCurrentItems,setPageCount) =>{\n\n  useEffect(() => {\n     const endOffset = itemOffset + itemsPerPage;\n     if (data) {\n       setCurrentItems(data.slice(itemOffset, endOffset));\n       setPageCount(Math.ceil(data.length / itemsPerPage));\n     }\n  },[itemOffset, itemsPerPage, data]);\n}","export const itemsPerPage = 100;","import { itemsPerPage } from \"./itemsPerPage\";\n\n\nexport const handlePageClick = (event,data,setItemOffset) => {\n    const newOffset = (event.selected * itemsPerPage) % data.length;\n \n    setItemOffset(newOffset);\n  };","import styled from \"styled-components\";\n\nexport const CommonButtonStyled = styled.button`\n  background-color: #5469d4;\n  color: #fff;\n  font-size: 16px;\n  font-weight: 600;\n  cursor: pointer;\n  line-height: 28px;\n  padding: 8px 16px;\n  width: 100%;\n  min-height: 44px;\n  border-radius: 4px;\n  border: 3px transparent dashed;\n  outline-color: transparent;\n  &:hover {\n    background: #fff;\n    border-style: solid;\n    border-color: #5469d4;\n    color: rgb(84, 105, 212);\n    transition: all 0.3s ease;\n  }\n  &:focus-visible {\n    border-color: #e00;\n    color: rgb(84, 105, 212);\n    background-color: #fff;\n  }\n`;","import styled from \"styled-components\";\nimport { CommonButtonStyled } from \"../../../commonStyles/CommonButtonStyled\";\n\nexport const ButtonSubmitStyled = styled(CommonButtonStyled)`\n`;\n","import { ButtonSubmitStyled } from \"./styles/ButtonSubmitStyled.js\";\n\nexport const ButtonSubmit = () => {\n  return <ButtonSubmitStyled type=\"submit\">Submit</ButtonSubmitStyled>;\n};\n","import styled from \"styled-components\";\n\nexport const ContactFormStyled = styled.form`\n  padding: 48px;\n`;\n","import styled from \"styled-components\";\n\nexport const MyOwnFieldStyled = styled.div`\n  padding-bottom: 24px;\n  max-width: 352px;\n  display: flex;\n  flex-direction: column;\n  input,\n  select {\n    font-size: 16px;\n    line-height: 28px;\n    padding: 8px 16px;\n    min-height: 44px;\n    border: unset;\n    border-radius: 4px;\n    box-sizing: content-box;\n    outline-color: rgb(84 105 212 / 0.5);\n    background-color: rgb(255, 255, 255);\n    box-shadow: rgba(0, 0, 0, 0) 0px 0px 0px 0px,\n      rgba(0, 0, 0, 0) 0px 0px 0px 0px, rgba(0, 0, 0, 0) 0px 0px 0px 0px,\n      rgba(60, 66, 87, 0.16) 0px 0px 0px 1px, rgba(0, 0, 0, 0) 0px 0px 0px 0px,\n      rgba(0, 0, 0, 0) 0px 0px 0px 0px, rgba(0, 0, 0, 0) 0px 0px 0px 0px;\n  }\n  input[data-light-mode=\"true\"]:focus-visible,\n  select[data-light-mode=\"true\"]:focus-visible {\n    outline: 2px #e00 dashed;\n    background-color: #fff;\n  }\n  input[data-light-mode=\"false\"]:focus-visible,\n  select[data-light-mode=\"false\"]:focus-visible {\n    outline: unset;\n    background-color: #fffc97;\n  }\n  input::-webkit-outer-spin-button,\n  input::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n  }\n`;\nexport const Label = styled.label`\n  font-size: 14px;\n  font-weight: 600;\n  display: block;\n  margin-bottom: 10px;\n  color: #000;\n`;\n","import { useField, Field } from \"formik\";\nimport { MyOwnFieldStyled, Label } from \"./styles/MyOwnField.styled\";\n\nexport const MyOwnField = ({ label, ...props }) => {\n  const [field, meta] = useField(props);\n\n  return (\n    <MyOwnFieldStyled>\n      <Label\n        htmlFor={props.id || props.name}>\n        {label}\n      </Label>\n      <Field\n        as={props.as}\n        {...field}\n        {...props}\n      />\n      {meta.touched && meta.error ? (\n        <div className=\"error\">{meta.error}</div>\n      ) : null}\n    </MyOwnFieldStyled>\n  );\n};\n","import {MyOwnField} from '../../MyOwnField/MyOwnField'\nexport const DefaultInputsForm = (props) => (\n  <>\n    <MyOwnField\n      id=\"name\"\n      label=\"Name\"\n      name=\"name\"\n      type=\"text\"\n      as=\"input\"\n      value={props.name}\n      placeholder=\"Please enter employee's name\"\n      pattern=\"^[A-Z-ZąćęłńóśźżĄĘŁŃÓŚŹŻ][a-z-ZąćęłńóśźżĄĘŁŃÓŚŹŻ]+\\s[A-Z][a-z]+$\"\n      required\n    />\n     <MyOwnField\n      id=\"age\"\n      label=\"Age\"\n      name=\"age\"\n      min='0'\n      type=\"number\"\n      as=\"input\"\n      value={props.age}\n      placeholder=\"Please enter employee's age\"\n      required\n    />\n     <MyOwnField\n       id=\"gender\"\n      as=\"select\"\n      name=\"gender\"\n      label=\"Gender\"\n      required\n      >\n      <option value=\"\">Select a gender</option>\n      <option value='male'>\n          male\n          </option>\n          <option value='female'>\n          female\n        </option>\n    </MyOwnField>\n      <MyOwnField\n      id=\"company\"\n      label=\"Company\"\n      name=\"company\"\n      type=\"text\"\n      as=\"input\"\n      value={props.company}\n      placeholder=\"Please enter employee's company\"\n      required\n    />\n     \n    <MyOwnField\n      id=\"isActive\"\n      as=\"select\"\n      name=\"isActive\"\n      label=\"Is active\"\n      value={props.isActive}\n      required>\n      <option value=\"\">Select a active</option>\n      <option value={false}>\n          false\n        </option>\n        <option  value={true}>\n          true\n        </option>\n    </MyOwnField>\n  </>\n);\n","import React, { useContext } from \"react\";\nimport { Formik } from \"formik\";\nimport {ButtonSubmit} from '../ButtonSubmit/ButtonSubmit'\nimport { ContactFormStyled } from \"./styles/ContactFormStyled\";\nimport { DefaultInputsForm } from \"../FormFields/DefaultInputsForm/DefaultInputsForm.js\";\nimport { EmployeesContext } from \"../../store/employees.context\";\n\nexport const  ContactForm = () => {\n  const [data,setData] = useContext(EmployeesContext)\n\n  return (\n    <Formik\n    initialValues={{\n      name:'',\n      age: null,\n      gender: '',\n      company: '',\n      isActive: null,\n    }}\n      onSubmit={(values) => {\n        setData((previous)=>{\n          const newIndex = (previous[0].index)+1\n          return [  \n            {index: newIndex,...values},\n            ...previous\n          ]\n        })\n      }}>\n      {(props) => (\n        <ContactFormStyled\n          onReset={props.handleReset}\n          onSubmit={props.handleSubmit}>\n          <DefaultInputsForm values={props.values} />\n          <ButtonSubmit />\n        </ContactFormStyled>\n      )}\n    </Formik>\n  );\n};\n\n\n","import styled from \"styled-components\";\n\nexport const FormBoxStyled = styled.div`\n  margin: 0px auto;\n  width: 100%;\n  max-width: 448px;\n  background: #fff;\n  background: ${(props) => (props.isLightThemeColor ? \"#fff\" : \"#212121\")};\n  border-radius: 4px;\n  box-shadow: rgb(60 66 87 / 12%) 0px 7px 14px 0px,\n    rgb(0 0 0 / 12%) 0px 3px 6px 0px;\n`;\nFormBoxStyled.defaultProps = {\n  isLightThemeColor: \"#fff\",\n};\n","import { FormBoxStyled } from \"./styles/FormBoxStyled.js\";\n\nexport const FormBox = (props) => {\n\n  return (\n    <FormBoxStyled >\n      {props.children}\n    </FormBoxStyled>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const MainHeadingStyled = styled.h1`\n  text-align: center;\n  padding: 11px 0 24px;\n  color: #5469d4;\n`;\n","import { MainHeadingStyled } from \"./styles/MainHeadingStyled\";\n\nexport const MainHeading = () => {\n  return <MainHeadingStyled>Add new employee</MainHeadingStyled>;\n};\n","import { Modal, Button } from \"react-bootstrap\";\nimport { useContext } from \"react\";\nimport { deleteSelectedEmployee } from \"../../utils/deleteSelectedEmployee\";\nimport { EmployeesContext } from \"../../store/employees.context\";\nimport { ModalContext } from \"../../store/modal.context\";\n\nexport const ModalConfirmationToDeleteEmployee = (props) => {\n  const [data, setData, itemToDelete] = useContext(EmployeesContext)\n  const [isModalOpen, setIsModalOpen] = useContext(ModalContext)\n\n  return (\n    <Modal show={props.isOpenModal} onHide={setIsModalOpen}>\n      <Modal.Header closeButton>\n        <Modal.Title>Usunięcie pracownika</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>Czy chcesz usunąć tego pracownika z listy?</Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"primary\" onClick={() => { setIsModalOpen(!isModalOpen); deleteSelectedEmployee(data, setData, itemToDelete) }}>\n          Tak\n        </Button>\n        <Button variant=\"secondary\" onClick={() => setIsModalOpen(!isModalOpen)}>\n          Nie\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  )\n}\n","export const deleteSelectedEmployee = (data,setData,item) => {\n    const newArrayOfEmployees= data.filter((currentItem) => {\n        return currentItem.index !== item.index;\n      });\n\n    setData(newArrayOfEmployees);\n}","import styled from \"styled-components\";\nimport { CommonButtonStyled } from \"../../../commonStyles/CommonButtonStyled\";\n\nexport const ButtonOpenTableStyled = styled(CommonButtonStyled)`\n    margin: 50px auto;\n    max-width: 200px;\n`;","import { ButtonOpenTableStyled } from \"./styles/ButtonOpenTableStyled\"\n\nexport const ButtonOpenTable = ({ isOpenTable, setIsOpenTable }) => {\n\n    return (\n        <ButtonOpenTableStyled onClick={() => setIsOpenTable(!isOpenTable)}>\n            {isOpenTable ? 'Close' : 'Open'}\n        </ButtonOpenTableStyled>\n    )\n}\n\n\n","import { useContext, useState } from \"react\";\nimport TableEmployees from \"./components/TableEmployees/TableEmployees\";\nimport { ContactForm } from './components/ContactForm/ContactForm'\nimport { FormBox } from './components/FormBox/FormBox'\nimport { MainHeading } from \"./components/MainHeading/MainHeading\";\nimport { ModalConfirmationToDeleteEmployee } from \"./components/ModalConfirmationToDeleteEmployee/ModalConfirmationToDeleteEmployee\";\nimport { ModalContext } from './store/modal.context'\nimport { ButtonOpenTable } from \"./components/ButtonOpenTable/ButtonOpenTable\";\n\nfunction App() {\n  const [isOpenTable, setIsOpenTable] = useState(false)\n  const [isOpenModal, setIsOpenModal] = useContext(ModalContext)\n  const [show, setShow] = useState(false);\n  const handleShow = () => setShow(true);\n\n  return (\n    <div className=\"App\">\n      <MainHeading />\n      <FormBox>\n        <ContactForm />\n      </FormBox>\n      <ButtonOpenTable isOpenTable={isOpenTable} setIsOpenTable={setIsOpenTable} />\n      {isOpenModal ? <ModalConfirmationToDeleteEmployee isOpenModal={isOpenModal} show={show} handleShow={handleShow} /> : null}\n      {isOpenTable ? <TableEmployees handleShow={handleShow} /> : null}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { EmployeesContextProvider } from \"./store/employees.context\";\nimport { ModalContextProvider } from './store/modal.context'\n\nReactDOM.render(\n  <React.StrictMode>\n    <EmployeesContextProvider>\n      <ModalContextProvider>\n        <App />\n      </ModalContextProvider>\n    </EmployeesContextProvider>\n  </React.StrictMode>,\n  document.getElementById(\"container\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}